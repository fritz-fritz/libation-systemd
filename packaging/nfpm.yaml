name: libation-systemd
arch: all
platform: linux
version: "v{{ .Version }}"
section: misc
priority: optional
maintainer: FRITZ|FRITZ <code@fritztech.net>
description: |
  User systemd units and helpers to mount S3 storage via rclone
  and launch Libation with warm caches and clean teardown.
homepage: https://github.com/fritz-fritz/libation-systemd
license: GPL-3.0-or-later

contents:
  # systemd user units
  - src: systemd/user/libation.service
    dst: /usr/share/libation-systemd/systemd/user/libation.service
  - src: systemd/user/libation-b2.service
    dst: /usr/share/libation-systemd/systemd/user/libation-b2.service
  - src: systemd/user/libation-b2-warmup.service
    dst: /usr/share/libation-systemd/systemd/user/libation-b2-warmup.service
  - src: systemd/user/app-libation.slice
    dst: /usr/share/libation-systemd/systemd/user/app-libation.slice

  # env template and setup helper
  - src: config/env.example
    dst: /usr/share/libation-systemd/env.example
    file_info:
      mode: 0644
  - src: scripts/setup-libation-systemd
    dst: /usr/bin/setup-libation-systemd
    file_info:
      mode: 0755

overrides:
  deb:
    depends:
      - rclone (>= 1.60)
      - fuse3
      - libation
    recommends:
      - libnotify-bin
  rpm:
    depends:
      - rclone >= 1.60
      - fuse3
      - libation
    recommends:
      - libnotify

# also produce a plain tarball with the same files
formats:
  - deb
  - rpm
  - tar.gz

rpm:
  summary: Libation systemd user units + rclone mount
deb:
  recommends:
    - dbus-user-session

scripts:
  postinstall: |
    #!/bin/sh
    # determine real user (if apt was run under sudo)
    USER="${SUDO_USER:-$(logname 2>/dev/null || echo root)}"
    if [ "$USER" != "root" ] && command -v runuser >/dev/null 2>&1; then
      echo "Running interactive setup for $USERâ€¦"
      runuser -l "$USER" -c "/usr/bin/setup-libation-systemd" || true
    else
      echo ""
      echo "To finish setup, please run as your user:"
      echo "  setup-libation-systemd"
      echo ""
    fi